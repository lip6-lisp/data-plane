*** /usr/src/sys/netinet6/ip6_forward.c.orig	Thu Jul 10 23:59:24 2014
--- /usr/src/sys/netinet6/ip6_forward.c	Wed Dec  9 11:15:52 2015
***************
*** 37,42 ****
--- 37,43 ----
  #include "opt_ipfw.h"
  #include "opt_ipsec.h"
  #include "opt_ipstealth.h"
+ #include "opt_lisp.h"
  
  #include <sys/param.h>
  #include <sys/systm.h>
***************
*** 67,72 ****
--- 68,80 ----
  #include <netinet/icmp6.h>
  #include <netinet6/nd6.h>
  
+ #ifdef LISP
+ #include <net/lisp/lisp.h>
+ #include <net/lisp/maptables.h>
+    
+ #include <netinet6/lisp6/ip6_lisp6.h>
+ #endif /* LISP */
+  
  #include <netinet/in_pcb.h>
  
  #ifdef IPSEC
***************
*** 111,116 ****
--- 119,129 ----
  	struct m_tag *fwd_tag;
  	char ip6bufs[INET6_ADDRSTRLEN], ip6bufd[INET6_ADDRSTRLEN];
  
+ #ifdef LISP
+ 	struct eidmap *  local_map = NULL;
+ 	struct eidmap *  remote_map = NULL;
+ #endif /* LISP */
+ 
  #ifdef IPSEC
  	/*
  	 * Check AH/ESP integrity.
***************
*** 358,363 ****
--- 371,400 ----
  	dst->sin6_family = AF_INET6;
  	dst->sin6_addr = ip6->ip6_dst;
  again2:
+ #ifdef LISP
+          /* Check if LISP encap possible.
+           * In possible call the correct routine.
+           */
+  
+          error = 0;
+           
+          if ( !srcrt && ((error = lisp_ip6_mapencap( &m, 0, &local_map,
+                                                       &remote_map)) == 0)
+                      && local_map ) {
+                               
+                  error = lisp6_output(m, sizeof(struct ip6_hdr), 
+                                                local_map, remote_map);
+                   
+                  goto senderr; 
+                                  
+          } else if (error) {
+   
+                    m_freem(m);
+                    goto freecopy;
+   
+          };
+ #endif /* LISP */
+ 
  	rin6.ro_rt = in6_rtalloc1((struct sockaddr *)dst, 0, 0, M_GETFIB(m));
  	if (rin6.ro_rt != NULL)
  		RT_UNLOCK(rin6.ro_rt);
***************
*** 632,638 ****
  				goto freecopy;
  		}
  	}
! 
  	if (mcopy == NULL)
  		goto out;
  	switch (error) {
--- 669,675 ----
  				goto freecopy;
  		}
  	}
! senderr:
  	if (mcopy == NULL)
  		goto out;
  	switch (error) {
