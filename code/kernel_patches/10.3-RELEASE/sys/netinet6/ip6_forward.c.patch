*** /usr/src/sys/netinet6/ip6_forward.c.orig	Thu Apr 21 18:00:06 2016
--- /usr/src/sys/netinet6/ip6_forward.c	Thu Apr 21 18:12:37 2016
***************
*** 37,42 ****
--- 37,43 ----
  #include "opt_ipfw.h"
  #include "opt_ipsec.h"
  #include "opt_ipstealth.h"
+ #include "opt_lisp.h"

  #include <sys/param.h>
  #include <sys/systm.h>
***************
*** 66,71 ****
--- 67,78 ----
  #include <netinet6/scope6_var.h>
  #include <netinet/icmp6.h>
  #include <netinet6/nd6.h>
+ #ifdef LISP
+ #include <net/lisp/lisp.h>
+ #include <net/lisp/maptables.h>
+
+ #include <netinet6/lisp6/ip6_lisp6.h>
+ #endif /* LISP */

  #include <netinet/in_pcb.h>

***************
*** 111,116 ****
--- 118,128 ----
  	struct m_tag *fwd_tag;
  	char ip6bufs[INET6_ADDRSTRLEN], ip6bufd[INET6_ADDRSTRLEN];

+ #ifdef LISP
+ 	struct eidmap *  local_map = NULL;
+ 	struct eidmap *  remote_map = NULL;
+ #endif /* LISP */
+
  #ifdef IPSEC
  	/*
  	 * Check AH/ESP integrity.
***************
*** 347,352 ****
--- 359,388 ----
  	dst->sin6_family = AF_INET6;
  	dst->sin6_addr = ip6->ip6_dst;
  again2:
+ #ifdef LISP
+  	 /* Check if LISP encap possible.
+  	  * In possible call the correct routine.
+  	  */
+
+  	 error = 0;
+
+  	 if ( !srcrt && ((error = lisp_ip6_mapencap( &m, 0, &local_map,
+  												  &remote_map)) == 0)
+  				 && local_map ) {
+
+  			 error = lisp6_output(m, sizeof(struct ip6_hdr),
+  										   local_map, remote_map);
+
+  			 goto senderr;
+
+  	 } else if (error) {
+
+  			   m_freem(m);
+  			   goto freecopy;
+
+  	 };
+ #endif /* LISP */
+
  	rin6.ro_rt = in6_rtalloc1((struct sockaddr *)dst, 0, 0, M_GETFIB(m));
  	if (rin6.ro_rt != NULL)
  		RT_UNLOCK(rin6.ro_rt);
***************
*** 606,612 ****
  				goto freecopy;
  		}
  	}
!
  	if (mcopy == NULL)
  		goto out;
  	switch (error) {
--- 642,648 ----
  				goto freecopy;
  		}
  	}
! senderr:
  	if (mcopy == NULL)
  		goto out;
  	switch (error) {
